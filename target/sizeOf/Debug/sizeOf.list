
sizeOf.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000010b4  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f8  08001244  08001244  00002244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800133c  0800133c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800133c  0800133c  0000233c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001344  08001344  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001344  08001344  00002344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001348  08001348  00002348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800134c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b15  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003bf  00000000  00000000  00003ba1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00003f60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000dc  00000000  00000000  00004078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000029bd  00000000  00000000  00004154  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001476  00000000  00000000  00006b11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097ca  00000000  00000000  00007f87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011751  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000009c4  00000000  00000000  00011794  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 000002a7  00000000  00000000  00012158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000067  00000000  00000000  000123ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800122c 	.word	0x0800122c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	0800122c 	.word	0x0800122c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000270:	b508      	push	{r3, lr}
    printf("Size of char data type is %u\n",sizeof(char));
 8000272:	2101      	movs	r1, #1
 8000274:	480b      	ldr	r0, [pc, #44]	@ (80002a4 <main+0x34>)
 8000276:	f000 f96b 	bl	8000550 <iprintf>
    printf("Size of short data type is %u\n",sizeof(short));
 800027a:	2102      	movs	r1, #2
 800027c:	480a      	ldr	r0, [pc, #40]	@ (80002a8 <main+0x38>)
 800027e:	f000 f967 	bl	8000550 <iprintf>
    printf("Size of int data type is %u\n",sizeof(int));
 8000282:	2104      	movs	r1, #4
 8000284:	4809      	ldr	r0, [pc, #36]	@ (80002ac <main+0x3c>)
 8000286:	f000 f963 	bl	8000550 <iprintf>
    printf("Size of double data type is %u\n",sizeof(double));
 800028a:	2108      	movs	r1, #8
 800028c:	4808      	ldr	r0, [pc, #32]	@ (80002b0 <main+0x40>)
 800028e:	f000 f95f 	bl	8000550 <iprintf>
    printf("Size of long data type is %u\n",sizeof(long));
 8000292:	2104      	movs	r1, #4
 8000294:	4807      	ldr	r0, [pc, #28]	@ (80002b4 <main+0x44>)
 8000296:	f000 f95b 	bl	8000550 <iprintf>
    printf("Size of long long data type is %u\n",sizeof(long long));
 800029a:	4807      	ldr	r0, [pc, #28]	@ (80002b8 <main+0x48>)
 800029c:	2108      	movs	r1, #8
 800029e:	f000 f957 	bl	8000550 <iprintf>
	/* Loop forever */
	for(;;);
 80002a2:	e7fe      	b.n	80002a2 <main+0x32>
 80002a4:	08001244 	.word	0x08001244
 80002a8:	08001264 	.word	0x08001264
 80002ac:	08001284 	.word	0x08001284
 80002b0:	080012a4 	.word	0x080012a4
 80002b4:	080012c4 	.word	0x080012c4
 80002b8:	080012e4 	.word	0x080012e4

080002bc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002bc:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002be:	1e16      	subs	r6, r2, #0
 80002c0:	dd07      	ble.n	80002d2 <_read+0x16>
 80002c2:	460c      	mov	r4, r1
 80002c4:	198d      	adds	r5, r1, r6
  {
    *ptr++ = __io_getchar();
 80002c6:	f3af 8000 	nop.w
 80002ca:	f804 0b01 	strb.w	r0, [r4], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ce:	42a5      	cmp	r5, r4
 80002d0:	d1f9      	bne.n	80002c6 <_read+0xa>
  }

  return len;
}
 80002d2:	4630      	mov	r0, r6
 80002d4:	bd70      	pop	{r4, r5, r6, pc}
 80002d6:	bf00      	nop

080002d8 <_write>:
__attribute__((weak)) int _write(int file, char *ptr, int len)
{
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d8:	1e10      	subs	r0, r2, #0
 80002da:	dd1b      	ble.n	8000314 <_write+0x3c>
{
 80002dc:	b510      	push	{r4, lr}
	DEMCR |= ( 1 << 24);
 80002de:	f04f 2ce0 	mov.w	ip, #3758153728	@ 0xe000e000
 80002e2:	eb01 0e00 	add.w	lr, r1, r0
	ITM_TRACE_EN |= ( 1 << 0);
 80002e6:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
	DEMCR |= ( 1 << 24);
 80002ea:	f8dc 3dfc 	ldr.w	r3, [ip, #3580]	@ 0xdfc
  {
	  // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80002ee:	f811 4b01 	ldrb.w	r4, [r1], #1
	DEMCR |= ( 1 << 24);
 80002f2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002f6:	f8cc 3dfc 	str.w	r3, [ip, #3580]	@ 0xdfc
	ITM_TRACE_EN |= ( 1 << 0);
 80002fa:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80002fe:	f043 0301 	orr.w	r3, r3, #1
 8000302:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000306:	6813      	ldr	r3, [r2, #0]
 8000308:	07db      	lsls	r3, r3, #31
 800030a:	d5fc      	bpl.n	8000306 <_write+0x2e>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030c:	458e      	cmp	lr, r1
	ITM_STIMULUS_PORT0 = ch;
 800030e:	6014      	str	r4, [r2, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000310:	d1eb      	bne.n	80002ea <_write+0x12>
  }
  return len;
}
 8000312:	bd10      	pop	{r4, pc}
 8000314:	4770      	bx	lr
 8000316:	bf00      	nop

08000318 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000318:	f04f 30ff 	mov.w	r0, #4294967295
 800031c:	4770      	bx	lr
 800031e:	bf00      	nop

08000320 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000320:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000324:	604b      	str	r3, [r1, #4]
  return 0;
}
 8000326:	2000      	movs	r0, #0
 8000328:	4770      	bx	lr
 800032a:	bf00      	nop

0800032c <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 800032c:	2001      	movs	r0, #1
 800032e:	4770      	bx	lr

08000330 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000330:	2000      	movs	r0, #0
 8000332:	4770      	bx	lr

08000334 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000334:	490c      	ldr	r1, [pc, #48]	@ (8000368 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000336:	4a0d      	ldr	r2, [pc, #52]	@ (800036c <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8000338:	680b      	ldr	r3, [r1, #0]
{
 800033a:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800033c:	4c0c      	ldr	r4, [pc, #48]	@ (8000370 <_sbrk+0x3c>)
 800033e:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8000340:	b12b      	cbz	r3, 800034e <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000342:	4418      	add	r0, r3
 8000344:	4290      	cmp	r0, r2
 8000346:	d807      	bhi.n	8000358 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8000348:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 800034a:	4618      	mov	r0, r3
 800034c:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 800034e:	4b09      	ldr	r3, [pc, #36]	@ (8000374 <_sbrk+0x40>)
 8000350:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8000352:	4418      	add	r0, r3
 8000354:	4290      	cmp	r0, r2
 8000356:	d9f7      	bls.n	8000348 <_sbrk+0x14>
    errno = ENOMEM;
 8000358:	f000 f99e 	bl	8000698 <__errno>
 800035c:	230c      	movs	r3, #12
 800035e:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000360:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000364:	4618      	mov	r0, r3
 8000366:	bd10      	pop	{r4, pc}
 8000368:	20000078 	.word	0x20000078
 800036c:	20020000 	.word	0x20020000
 8000370:	00000400 	.word	0x00000400
 8000374:	200001c8 	.word	0x200001c8

08000378 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000378:	480d      	ldr	r0, [pc, #52]	@ (80003b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800037a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800037c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000380:	480c      	ldr	r0, [pc, #48]	@ (80003b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000382:	490d      	ldr	r1, [pc, #52]	@ (80003b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000384:	4a0d      	ldr	r2, [pc, #52]	@ (80003bc <LoopForever+0xe>)
  movs r3, #0
 8000386:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000388:	e002      	b.n	8000390 <LoopCopyDataInit>

0800038a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800038a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800038c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800038e:	3304      	adds	r3, #4

08000390 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000390:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000392:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000394:	d3f9      	bcc.n	800038a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000396:	4a0a      	ldr	r2, [pc, #40]	@ (80003c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000398:	4c0a      	ldr	r4, [pc, #40]	@ (80003c4 <LoopForever+0x16>)
  movs r3, #0
 800039a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800039c:	e001      	b.n	80003a2 <LoopFillZerobss>

0800039e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800039e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003a0:	3204      	adds	r2, #4

080003a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003a4:	d3fb      	bcc.n	800039e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003a6:	f000 f97d 	bl	80006a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003aa:	f7ff ff61 	bl	8000270 <main>

080003ae <LoopForever>:

LoopForever:
  b LoopForever
 80003ae:	e7fe      	b.n	80003ae <LoopForever>
  ldr   r0, =_estack
 80003b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003b8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80003bc:	0800134c 	.word	0x0800134c
  ldr r2, =_sbss
 80003c0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003c4:	200001c8 	.word	0x200001c8

080003c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003c8:	e7fe      	b.n	80003c8 <ADC_IRQHandler>
	...

080003cc <std>:
 80003cc:	2300      	movs	r3, #0
 80003ce:	b510      	push	{r4, lr}
 80003d0:	4604      	mov	r4, r0
 80003d2:	e9c0 3300 	strd	r3, r3, [r0]
 80003d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003da:	6083      	str	r3, [r0, #8]
 80003dc:	8181      	strh	r1, [r0, #12]
 80003de:	6643      	str	r3, [r0, #100]	@ 0x64
 80003e0:	81c2      	strh	r2, [r0, #14]
 80003e2:	6183      	str	r3, [r0, #24]
 80003e4:	4619      	mov	r1, r3
 80003e6:	2208      	movs	r2, #8
 80003e8:	305c      	adds	r0, #92	@ 0x5c
 80003ea:	f000 f906 	bl	80005fa <memset>
 80003ee:	4b0d      	ldr	r3, [pc, #52]	@ (8000424 <std+0x58>)
 80003f0:	6263      	str	r3, [r4, #36]	@ 0x24
 80003f2:	4b0d      	ldr	r3, [pc, #52]	@ (8000428 <std+0x5c>)
 80003f4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003f6:	4b0d      	ldr	r3, [pc, #52]	@ (800042c <std+0x60>)
 80003f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003fa:	4b0d      	ldr	r3, [pc, #52]	@ (8000430 <std+0x64>)
 80003fc:	6323      	str	r3, [r4, #48]	@ 0x30
 80003fe:	4b0d      	ldr	r3, [pc, #52]	@ (8000434 <std+0x68>)
 8000400:	6224      	str	r4, [r4, #32]
 8000402:	429c      	cmp	r4, r3
 8000404:	d006      	beq.n	8000414 <std+0x48>
 8000406:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800040a:	4294      	cmp	r4, r2
 800040c:	d002      	beq.n	8000414 <std+0x48>
 800040e:	33d0      	adds	r3, #208	@ 0xd0
 8000410:	429c      	cmp	r4, r3
 8000412:	d105      	bne.n	8000420 <std+0x54>
 8000414:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800041c:	f000 b966 	b.w	80006ec <__retarget_lock_init_recursive>
 8000420:	bd10      	pop	{r4, pc}
 8000422:	bf00      	nop
 8000424:	08000575 	.word	0x08000575
 8000428:	08000597 	.word	0x08000597
 800042c:	080005cf 	.word	0x080005cf
 8000430:	080005f3 	.word	0x080005f3
 8000434:	2000007c 	.word	0x2000007c

08000438 <stdio_exit_handler>:
 8000438:	4a02      	ldr	r2, [pc, #8]	@ (8000444 <stdio_exit_handler+0xc>)
 800043a:	4903      	ldr	r1, [pc, #12]	@ (8000448 <stdio_exit_handler+0x10>)
 800043c:	4803      	ldr	r0, [pc, #12]	@ (800044c <stdio_exit_handler+0x14>)
 800043e:	f000 b869 	b.w	8000514 <_fwalk_sglue>
 8000442:	bf00      	nop
 8000444:	20000000 	.word	0x20000000
 8000448:	08000f8d 	.word	0x08000f8d
 800044c:	20000010 	.word	0x20000010

08000450 <cleanup_stdio>:
 8000450:	6841      	ldr	r1, [r0, #4]
 8000452:	4b0c      	ldr	r3, [pc, #48]	@ (8000484 <cleanup_stdio+0x34>)
 8000454:	4299      	cmp	r1, r3
 8000456:	b510      	push	{r4, lr}
 8000458:	4604      	mov	r4, r0
 800045a:	d001      	beq.n	8000460 <cleanup_stdio+0x10>
 800045c:	f000 fd96 	bl	8000f8c <_fflush_r>
 8000460:	68a1      	ldr	r1, [r4, #8]
 8000462:	4b09      	ldr	r3, [pc, #36]	@ (8000488 <cleanup_stdio+0x38>)
 8000464:	4299      	cmp	r1, r3
 8000466:	d002      	beq.n	800046e <cleanup_stdio+0x1e>
 8000468:	4620      	mov	r0, r4
 800046a:	f000 fd8f 	bl	8000f8c <_fflush_r>
 800046e:	68e1      	ldr	r1, [r4, #12]
 8000470:	4b06      	ldr	r3, [pc, #24]	@ (800048c <cleanup_stdio+0x3c>)
 8000472:	4299      	cmp	r1, r3
 8000474:	d004      	beq.n	8000480 <cleanup_stdio+0x30>
 8000476:	4620      	mov	r0, r4
 8000478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800047c:	f000 bd86 	b.w	8000f8c <_fflush_r>
 8000480:	bd10      	pop	{r4, pc}
 8000482:	bf00      	nop
 8000484:	2000007c 	.word	0x2000007c
 8000488:	200000e4 	.word	0x200000e4
 800048c:	2000014c 	.word	0x2000014c

08000490 <global_stdio_init.part.0>:
 8000490:	b510      	push	{r4, lr}
 8000492:	4b0b      	ldr	r3, [pc, #44]	@ (80004c0 <global_stdio_init.part.0+0x30>)
 8000494:	4c0b      	ldr	r4, [pc, #44]	@ (80004c4 <global_stdio_init.part.0+0x34>)
 8000496:	4a0c      	ldr	r2, [pc, #48]	@ (80004c8 <global_stdio_init.part.0+0x38>)
 8000498:	601a      	str	r2, [r3, #0]
 800049a:	4620      	mov	r0, r4
 800049c:	2200      	movs	r2, #0
 800049e:	2104      	movs	r1, #4
 80004a0:	f7ff ff94 	bl	80003cc <std>
 80004a4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80004a8:	2201      	movs	r2, #1
 80004aa:	2109      	movs	r1, #9
 80004ac:	f7ff ff8e 	bl	80003cc <std>
 80004b0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80004b4:	2202      	movs	r2, #2
 80004b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004ba:	2112      	movs	r1, #18
 80004bc:	f7ff bf86 	b.w	80003cc <std>
 80004c0:	200001b4 	.word	0x200001b4
 80004c4:	2000007c 	.word	0x2000007c
 80004c8:	08000439 	.word	0x08000439

080004cc <__sfp_lock_acquire>:
 80004cc:	4801      	ldr	r0, [pc, #4]	@ (80004d4 <__sfp_lock_acquire+0x8>)
 80004ce:	f000 b90e 	b.w	80006ee <__retarget_lock_acquire_recursive>
 80004d2:	bf00      	nop
 80004d4:	200001bd 	.word	0x200001bd

080004d8 <__sfp_lock_release>:
 80004d8:	4801      	ldr	r0, [pc, #4]	@ (80004e0 <__sfp_lock_release+0x8>)
 80004da:	f000 b909 	b.w	80006f0 <__retarget_lock_release_recursive>
 80004de:	bf00      	nop
 80004e0:	200001bd 	.word	0x200001bd

080004e4 <__sinit>:
 80004e4:	b510      	push	{r4, lr}
 80004e6:	4604      	mov	r4, r0
 80004e8:	f7ff fff0 	bl	80004cc <__sfp_lock_acquire>
 80004ec:	6a23      	ldr	r3, [r4, #32]
 80004ee:	b11b      	cbz	r3, 80004f8 <__sinit+0x14>
 80004f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004f4:	f7ff bff0 	b.w	80004d8 <__sfp_lock_release>
 80004f8:	4b04      	ldr	r3, [pc, #16]	@ (800050c <__sinit+0x28>)
 80004fa:	6223      	str	r3, [r4, #32]
 80004fc:	4b04      	ldr	r3, [pc, #16]	@ (8000510 <__sinit+0x2c>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d1f5      	bne.n	80004f0 <__sinit+0xc>
 8000504:	f7ff ffc4 	bl	8000490 <global_stdio_init.part.0>
 8000508:	e7f2      	b.n	80004f0 <__sinit+0xc>
 800050a:	bf00      	nop
 800050c:	08000451 	.word	0x08000451
 8000510:	200001b4 	.word	0x200001b4

08000514 <_fwalk_sglue>:
 8000514:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000518:	4607      	mov	r7, r0
 800051a:	4688      	mov	r8, r1
 800051c:	4614      	mov	r4, r2
 800051e:	2600      	movs	r6, #0
 8000520:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000524:	f1b9 0901 	subs.w	r9, r9, #1
 8000528:	d505      	bpl.n	8000536 <_fwalk_sglue+0x22>
 800052a:	6824      	ldr	r4, [r4, #0]
 800052c:	2c00      	cmp	r4, #0
 800052e:	d1f7      	bne.n	8000520 <_fwalk_sglue+0xc>
 8000530:	4630      	mov	r0, r6
 8000532:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000536:	89ab      	ldrh	r3, [r5, #12]
 8000538:	2b01      	cmp	r3, #1
 800053a:	d907      	bls.n	800054c <_fwalk_sglue+0x38>
 800053c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000540:	3301      	adds	r3, #1
 8000542:	d003      	beq.n	800054c <_fwalk_sglue+0x38>
 8000544:	4629      	mov	r1, r5
 8000546:	4638      	mov	r0, r7
 8000548:	47c0      	blx	r8
 800054a:	4306      	orrs	r6, r0
 800054c:	3568      	adds	r5, #104	@ 0x68
 800054e:	e7e9      	b.n	8000524 <_fwalk_sglue+0x10>

08000550 <iprintf>:
 8000550:	b40f      	push	{r0, r1, r2, r3}
 8000552:	b507      	push	{r0, r1, r2, lr}
 8000554:	4906      	ldr	r1, [pc, #24]	@ (8000570 <iprintf+0x20>)
 8000556:	ab04      	add	r3, sp, #16
 8000558:	6808      	ldr	r0, [r1, #0]
 800055a:	f853 2b04 	ldr.w	r2, [r3], #4
 800055e:	6881      	ldr	r1, [r0, #8]
 8000560:	9301      	str	r3, [sp, #4]
 8000562:	f000 f9e9 	bl	8000938 <_vfiprintf_r>
 8000566:	b003      	add	sp, #12
 8000568:	f85d eb04 	ldr.w	lr, [sp], #4
 800056c:	b004      	add	sp, #16
 800056e:	4770      	bx	lr
 8000570:	2000000c 	.word	0x2000000c

08000574 <__sread>:
 8000574:	b510      	push	{r4, lr}
 8000576:	460c      	mov	r4, r1
 8000578:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800057c:	f000 f868 	bl	8000650 <_read_r>
 8000580:	2800      	cmp	r0, #0
 8000582:	bfab      	itete	ge
 8000584:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000586:	89a3      	ldrhlt	r3, [r4, #12]
 8000588:	181b      	addge	r3, r3, r0
 800058a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800058e:	bfac      	ite	ge
 8000590:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000592:	81a3      	strhlt	r3, [r4, #12]
 8000594:	bd10      	pop	{r4, pc}

08000596 <__swrite>:
 8000596:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800059a:	461f      	mov	r7, r3
 800059c:	898b      	ldrh	r3, [r1, #12]
 800059e:	05db      	lsls	r3, r3, #23
 80005a0:	4605      	mov	r5, r0
 80005a2:	460c      	mov	r4, r1
 80005a4:	4616      	mov	r6, r2
 80005a6:	d505      	bpl.n	80005b4 <__swrite+0x1e>
 80005a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005ac:	2302      	movs	r3, #2
 80005ae:	2200      	movs	r2, #0
 80005b0:	f000 f83c 	bl	800062c <_lseek_r>
 80005b4:	89a3      	ldrh	r3, [r4, #12]
 80005b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80005ba:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80005be:	81a3      	strh	r3, [r4, #12]
 80005c0:	4632      	mov	r2, r6
 80005c2:	463b      	mov	r3, r7
 80005c4:	4628      	mov	r0, r5
 80005c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005ca:	f000 b853 	b.w	8000674 <_write_r>

080005ce <__sseek>:
 80005ce:	b510      	push	{r4, lr}
 80005d0:	460c      	mov	r4, r1
 80005d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005d6:	f000 f829 	bl	800062c <_lseek_r>
 80005da:	1c43      	adds	r3, r0, #1
 80005dc:	89a3      	ldrh	r3, [r4, #12]
 80005de:	bf15      	itete	ne
 80005e0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80005e2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80005e6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80005ea:	81a3      	strheq	r3, [r4, #12]
 80005ec:	bf18      	it	ne
 80005ee:	81a3      	strhne	r3, [r4, #12]
 80005f0:	bd10      	pop	{r4, pc}

080005f2 <__sclose>:
 80005f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005f6:	f000 b809 	b.w	800060c <_close_r>

080005fa <memset>:
 80005fa:	4402      	add	r2, r0
 80005fc:	4603      	mov	r3, r0
 80005fe:	4293      	cmp	r3, r2
 8000600:	d100      	bne.n	8000604 <memset+0xa>
 8000602:	4770      	bx	lr
 8000604:	f803 1b01 	strb.w	r1, [r3], #1
 8000608:	e7f9      	b.n	80005fe <memset+0x4>
	...

0800060c <_close_r>:
 800060c:	b538      	push	{r3, r4, r5, lr}
 800060e:	4d06      	ldr	r5, [pc, #24]	@ (8000628 <_close_r+0x1c>)
 8000610:	2300      	movs	r3, #0
 8000612:	4604      	mov	r4, r0
 8000614:	4608      	mov	r0, r1
 8000616:	602b      	str	r3, [r5, #0]
 8000618:	f7ff fe7e 	bl	8000318 <_close>
 800061c:	1c43      	adds	r3, r0, #1
 800061e:	d102      	bne.n	8000626 <_close_r+0x1a>
 8000620:	682b      	ldr	r3, [r5, #0]
 8000622:	b103      	cbz	r3, 8000626 <_close_r+0x1a>
 8000624:	6023      	str	r3, [r4, #0]
 8000626:	bd38      	pop	{r3, r4, r5, pc}
 8000628:	200001b8 	.word	0x200001b8

0800062c <_lseek_r>:
 800062c:	b538      	push	{r3, r4, r5, lr}
 800062e:	4d07      	ldr	r5, [pc, #28]	@ (800064c <_lseek_r+0x20>)
 8000630:	4604      	mov	r4, r0
 8000632:	4608      	mov	r0, r1
 8000634:	4611      	mov	r1, r2
 8000636:	2200      	movs	r2, #0
 8000638:	602a      	str	r2, [r5, #0]
 800063a:	461a      	mov	r2, r3
 800063c:	f7ff fe78 	bl	8000330 <_lseek>
 8000640:	1c43      	adds	r3, r0, #1
 8000642:	d102      	bne.n	800064a <_lseek_r+0x1e>
 8000644:	682b      	ldr	r3, [r5, #0]
 8000646:	b103      	cbz	r3, 800064a <_lseek_r+0x1e>
 8000648:	6023      	str	r3, [r4, #0]
 800064a:	bd38      	pop	{r3, r4, r5, pc}
 800064c:	200001b8 	.word	0x200001b8

08000650 <_read_r>:
 8000650:	b538      	push	{r3, r4, r5, lr}
 8000652:	4d07      	ldr	r5, [pc, #28]	@ (8000670 <_read_r+0x20>)
 8000654:	4604      	mov	r4, r0
 8000656:	4608      	mov	r0, r1
 8000658:	4611      	mov	r1, r2
 800065a:	2200      	movs	r2, #0
 800065c:	602a      	str	r2, [r5, #0]
 800065e:	461a      	mov	r2, r3
 8000660:	f7ff fe2c 	bl	80002bc <_read>
 8000664:	1c43      	adds	r3, r0, #1
 8000666:	d102      	bne.n	800066e <_read_r+0x1e>
 8000668:	682b      	ldr	r3, [r5, #0]
 800066a:	b103      	cbz	r3, 800066e <_read_r+0x1e>
 800066c:	6023      	str	r3, [r4, #0]
 800066e:	bd38      	pop	{r3, r4, r5, pc}
 8000670:	200001b8 	.word	0x200001b8

08000674 <_write_r>:
 8000674:	b538      	push	{r3, r4, r5, lr}
 8000676:	4d07      	ldr	r5, [pc, #28]	@ (8000694 <_write_r+0x20>)
 8000678:	4604      	mov	r4, r0
 800067a:	4608      	mov	r0, r1
 800067c:	4611      	mov	r1, r2
 800067e:	2200      	movs	r2, #0
 8000680:	602a      	str	r2, [r5, #0]
 8000682:	461a      	mov	r2, r3
 8000684:	f7ff fe28 	bl	80002d8 <_write>
 8000688:	1c43      	adds	r3, r0, #1
 800068a:	d102      	bne.n	8000692 <_write_r+0x1e>
 800068c:	682b      	ldr	r3, [r5, #0]
 800068e:	b103      	cbz	r3, 8000692 <_write_r+0x1e>
 8000690:	6023      	str	r3, [r4, #0]
 8000692:	bd38      	pop	{r3, r4, r5, pc}
 8000694:	200001b8 	.word	0x200001b8

08000698 <__errno>:
 8000698:	4b01      	ldr	r3, [pc, #4]	@ (80006a0 <__errno+0x8>)
 800069a:	6818      	ldr	r0, [r3, #0]
 800069c:	4770      	bx	lr
 800069e:	bf00      	nop
 80006a0:	2000000c 	.word	0x2000000c

080006a4 <__libc_init_array>:
 80006a4:	b570      	push	{r4, r5, r6, lr}
 80006a6:	4d0d      	ldr	r5, [pc, #52]	@ (80006dc <__libc_init_array+0x38>)
 80006a8:	4c0d      	ldr	r4, [pc, #52]	@ (80006e0 <__libc_init_array+0x3c>)
 80006aa:	1b64      	subs	r4, r4, r5
 80006ac:	10a4      	asrs	r4, r4, #2
 80006ae:	2600      	movs	r6, #0
 80006b0:	42a6      	cmp	r6, r4
 80006b2:	d109      	bne.n	80006c8 <__libc_init_array+0x24>
 80006b4:	4d0b      	ldr	r5, [pc, #44]	@ (80006e4 <__libc_init_array+0x40>)
 80006b6:	4c0c      	ldr	r4, [pc, #48]	@ (80006e8 <__libc_init_array+0x44>)
 80006b8:	f000 fdb8 	bl	800122c <_init>
 80006bc:	1b64      	subs	r4, r4, r5
 80006be:	10a4      	asrs	r4, r4, #2
 80006c0:	2600      	movs	r6, #0
 80006c2:	42a6      	cmp	r6, r4
 80006c4:	d105      	bne.n	80006d2 <__libc_init_array+0x2e>
 80006c6:	bd70      	pop	{r4, r5, r6, pc}
 80006c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80006cc:	4798      	blx	r3
 80006ce:	3601      	adds	r6, #1
 80006d0:	e7ee      	b.n	80006b0 <__libc_init_array+0xc>
 80006d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80006d6:	4798      	blx	r3
 80006d8:	3601      	adds	r6, #1
 80006da:	e7f2      	b.n	80006c2 <__libc_init_array+0x1e>
 80006dc:	08001344 	.word	0x08001344
 80006e0:	08001344 	.word	0x08001344
 80006e4:	08001344 	.word	0x08001344
 80006e8:	08001348 	.word	0x08001348

080006ec <__retarget_lock_init_recursive>:
 80006ec:	4770      	bx	lr

080006ee <__retarget_lock_acquire_recursive>:
 80006ee:	4770      	bx	lr

080006f0 <__retarget_lock_release_recursive>:
 80006f0:	4770      	bx	lr
	...

080006f4 <_free_r>:
 80006f4:	b538      	push	{r3, r4, r5, lr}
 80006f6:	4605      	mov	r5, r0
 80006f8:	2900      	cmp	r1, #0
 80006fa:	d041      	beq.n	8000780 <_free_r+0x8c>
 80006fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000700:	1f0c      	subs	r4, r1, #4
 8000702:	2b00      	cmp	r3, #0
 8000704:	bfb8      	it	lt
 8000706:	18e4      	addlt	r4, r4, r3
 8000708:	f000 f8e0 	bl	80008cc <__malloc_lock>
 800070c:	4a1d      	ldr	r2, [pc, #116]	@ (8000784 <_free_r+0x90>)
 800070e:	6813      	ldr	r3, [r2, #0]
 8000710:	b933      	cbnz	r3, 8000720 <_free_r+0x2c>
 8000712:	6063      	str	r3, [r4, #4]
 8000714:	6014      	str	r4, [r2, #0]
 8000716:	4628      	mov	r0, r5
 8000718:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800071c:	f000 b8dc 	b.w	80008d8 <__malloc_unlock>
 8000720:	42a3      	cmp	r3, r4
 8000722:	d908      	bls.n	8000736 <_free_r+0x42>
 8000724:	6820      	ldr	r0, [r4, #0]
 8000726:	1821      	adds	r1, r4, r0
 8000728:	428b      	cmp	r3, r1
 800072a:	bf01      	itttt	eq
 800072c:	6819      	ldreq	r1, [r3, #0]
 800072e:	685b      	ldreq	r3, [r3, #4]
 8000730:	1809      	addeq	r1, r1, r0
 8000732:	6021      	streq	r1, [r4, #0]
 8000734:	e7ed      	b.n	8000712 <_free_r+0x1e>
 8000736:	461a      	mov	r2, r3
 8000738:	685b      	ldr	r3, [r3, #4]
 800073a:	b10b      	cbz	r3, 8000740 <_free_r+0x4c>
 800073c:	42a3      	cmp	r3, r4
 800073e:	d9fa      	bls.n	8000736 <_free_r+0x42>
 8000740:	6811      	ldr	r1, [r2, #0]
 8000742:	1850      	adds	r0, r2, r1
 8000744:	42a0      	cmp	r0, r4
 8000746:	d10b      	bne.n	8000760 <_free_r+0x6c>
 8000748:	6820      	ldr	r0, [r4, #0]
 800074a:	4401      	add	r1, r0
 800074c:	1850      	adds	r0, r2, r1
 800074e:	4283      	cmp	r3, r0
 8000750:	6011      	str	r1, [r2, #0]
 8000752:	d1e0      	bne.n	8000716 <_free_r+0x22>
 8000754:	6818      	ldr	r0, [r3, #0]
 8000756:	685b      	ldr	r3, [r3, #4]
 8000758:	6053      	str	r3, [r2, #4]
 800075a:	4408      	add	r0, r1
 800075c:	6010      	str	r0, [r2, #0]
 800075e:	e7da      	b.n	8000716 <_free_r+0x22>
 8000760:	d902      	bls.n	8000768 <_free_r+0x74>
 8000762:	230c      	movs	r3, #12
 8000764:	602b      	str	r3, [r5, #0]
 8000766:	e7d6      	b.n	8000716 <_free_r+0x22>
 8000768:	6820      	ldr	r0, [r4, #0]
 800076a:	1821      	adds	r1, r4, r0
 800076c:	428b      	cmp	r3, r1
 800076e:	bf04      	itt	eq
 8000770:	6819      	ldreq	r1, [r3, #0]
 8000772:	685b      	ldreq	r3, [r3, #4]
 8000774:	6063      	str	r3, [r4, #4]
 8000776:	bf04      	itt	eq
 8000778:	1809      	addeq	r1, r1, r0
 800077a:	6021      	streq	r1, [r4, #0]
 800077c:	6054      	str	r4, [r2, #4]
 800077e:	e7ca      	b.n	8000716 <_free_r+0x22>
 8000780:	bd38      	pop	{r3, r4, r5, pc}
 8000782:	bf00      	nop
 8000784:	200001c4 	.word	0x200001c4

08000788 <sbrk_aligned>:
 8000788:	b570      	push	{r4, r5, r6, lr}
 800078a:	4e0f      	ldr	r6, [pc, #60]	@ (80007c8 <sbrk_aligned+0x40>)
 800078c:	460c      	mov	r4, r1
 800078e:	6831      	ldr	r1, [r6, #0]
 8000790:	4605      	mov	r5, r0
 8000792:	b911      	cbnz	r1, 800079a <sbrk_aligned+0x12>
 8000794:	f000 fcb6 	bl	8001104 <_sbrk_r>
 8000798:	6030      	str	r0, [r6, #0]
 800079a:	4621      	mov	r1, r4
 800079c:	4628      	mov	r0, r5
 800079e:	f000 fcb1 	bl	8001104 <_sbrk_r>
 80007a2:	1c43      	adds	r3, r0, #1
 80007a4:	d103      	bne.n	80007ae <sbrk_aligned+0x26>
 80007a6:	f04f 34ff 	mov.w	r4, #4294967295
 80007aa:	4620      	mov	r0, r4
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	1cc4      	adds	r4, r0, #3
 80007b0:	f024 0403 	bic.w	r4, r4, #3
 80007b4:	42a0      	cmp	r0, r4
 80007b6:	d0f8      	beq.n	80007aa <sbrk_aligned+0x22>
 80007b8:	1a21      	subs	r1, r4, r0
 80007ba:	4628      	mov	r0, r5
 80007bc:	f000 fca2 	bl	8001104 <_sbrk_r>
 80007c0:	3001      	adds	r0, #1
 80007c2:	d1f2      	bne.n	80007aa <sbrk_aligned+0x22>
 80007c4:	e7ef      	b.n	80007a6 <sbrk_aligned+0x1e>
 80007c6:	bf00      	nop
 80007c8:	200001c0 	.word	0x200001c0

080007cc <_malloc_r>:
 80007cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007d0:	1ccd      	adds	r5, r1, #3
 80007d2:	f025 0503 	bic.w	r5, r5, #3
 80007d6:	3508      	adds	r5, #8
 80007d8:	2d0c      	cmp	r5, #12
 80007da:	bf38      	it	cc
 80007dc:	250c      	movcc	r5, #12
 80007de:	2d00      	cmp	r5, #0
 80007e0:	4606      	mov	r6, r0
 80007e2:	db01      	blt.n	80007e8 <_malloc_r+0x1c>
 80007e4:	42a9      	cmp	r1, r5
 80007e6:	d904      	bls.n	80007f2 <_malloc_r+0x26>
 80007e8:	230c      	movs	r3, #12
 80007ea:	6033      	str	r3, [r6, #0]
 80007ec:	2000      	movs	r0, #0
 80007ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007f2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80008c8 <_malloc_r+0xfc>
 80007f6:	f000 f869 	bl	80008cc <__malloc_lock>
 80007fa:	f8d8 3000 	ldr.w	r3, [r8]
 80007fe:	461c      	mov	r4, r3
 8000800:	bb44      	cbnz	r4, 8000854 <_malloc_r+0x88>
 8000802:	4629      	mov	r1, r5
 8000804:	4630      	mov	r0, r6
 8000806:	f7ff ffbf 	bl	8000788 <sbrk_aligned>
 800080a:	1c43      	adds	r3, r0, #1
 800080c:	4604      	mov	r4, r0
 800080e:	d158      	bne.n	80008c2 <_malloc_r+0xf6>
 8000810:	f8d8 4000 	ldr.w	r4, [r8]
 8000814:	4627      	mov	r7, r4
 8000816:	2f00      	cmp	r7, #0
 8000818:	d143      	bne.n	80008a2 <_malloc_r+0xd6>
 800081a:	2c00      	cmp	r4, #0
 800081c:	d04b      	beq.n	80008b6 <_malloc_r+0xea>
 800081e:	6823      	ldr	r3, [r4, #0]
 8000820:	4639      	mov	r1, r7
 8000822:	4630      	mov	r0, r6
 8000824:	eb04 0903 	add.w	r9, r4, r3
 8000828:	f000 fc6c 	bl	8001104 <_sbrk_r>
 800082c:	4581      	cmp	r9, r0
 800082e:	d142      	bne.n	80008b6 <_malloc_r+0xea>
 8000830:	6821      	ldr	r1, [r4, #0]
 8000832:	1a6d      	subs	r5, r5, r1
 8000834:	4629      	mov	r1, r5
 8000836:	4630      	mov	r0, r6
 8000838:	f7ff ffa6 	bl	8000788 <sbrk_aligned>
 800083c:	3001      	adds	r0, #1
 800083e:	d03a      	beq.n	80008b6 <_malloc_r+0xea>
 8000840:	6823      	ldr	r3, [r4, #0]
 8000842:	442b      	add	r3, r5
 8000844:	6023      	str	r3, [r4, #0]
 8000846:	f8d8 3000 	ldr.w	r3, [r8]
 800084a:	685a      	ldr	r2, [r3, #4]
 800084c:	bb62      	cbnz	r2, 80008a8 <_malloc_r+0xdc>
 800084e:	f8c8 7000 	str.w	r7, [r8]
 8000852:	e00f      	b.n	8000874 <_malloc_r+0xa8>
 8000854:	6822      	ldr	r2, [r4, #0]
 8000856:	1b52      	subs	r2, r2, r5
 8000858:	d420      	bmi.n	800089c <_malloc_r+0xd0>
 800085a:	2a0b      	cmp	r2, #11
 800085c:	d917      	bls.n	800088e <_malloc_r+0xc2>
 800085e:	1961      	adds	r1, r4, r5
 8000860:	42a3      	cmp	r3, r4
 8000862:	6025      	str	r5, [r4, #0]
 8000864:	bf18      	it	ne
 8000866:	6059      	strne	r1, [r3, #4]
 8000868:	6863      	ldr	r3, [r4, #4]
 800086a:	bf08      	it	eq
 800086c:	f8c8 1000 	streq.w	r1, [r8]
 8000870:	5162      	str	r2, [r4, r5]
 8000872:	604b      	str	r3, [r1, #4]
 8000874:	4630      	mov	r0, r6
 8000876:	f000 f82f 	bl	80008d8 <__malloc_unlock>
 800087a:	f104 000b 	add.w	r0, r4, #11
 800087e:	1d23      	adds	r3, r4, #4
 8000880:	f020 0007 	bic.w	r0, r0, #7
 8000884:	1ac2      	subs	r2, r0, r3
 8000886:	bf1c      	itt	ne
 8000888:	1a1b      	subne	r3, r3, r0
 800088a:	50a3      	strne	r3, [r4, r2]
 800088c:	e7af      	b.n	80007ee <_malloc_r+0x22>
 800088e:	6862      	ldr	r2, [r4, #4]
 8000890:	42a3      	cmp	r3, r4
 8000892:	bf0c      	ite	eq
 8000894:	f8c8 2000 	streq.w	r2, [r8]
 8000898:	605a      	strne	r2, [r3, #4]
 800089a:	e7eb      	b.n	8000874 <_malloc_r+0xa8>
 800089c:	4623      	mov	r3, r4
 800089e:	6864      	ldr	r4, [r4, #4]
 80008a0:	e7ae      	b.n	8000800 <_malloc_r+0x34>
 80008a2:	463c      	mov	r4, r7
 80008a4:	687f      	ldr	r7, [r7, #4]
 80008a6:	e7b6      	b.n	8000816 <_malloc_r+0x4a>
 80008a8:	461a      	mov	r2, r3
 80008aa:	685b      	ldr	r3, [r3, #4]
 80008ac:	42a3      	cmp	r3, r4
 80008ae:	d1fb      	bne.n	80008a8 <_malloc_r+0xdc>
 80008b0:	2300      	movs	r3, #0
 80008b2:	6053      	str	r3, [r2, #4]
 80008b4:	e7de      	b.n	8000874 <_malloc_r+0xa8>
 80008b6:	230c      	movs	r3, #12
 80008b8:	6033      	str	r3, [r6, #0]
 80008ba:	4630      	mov	r0, r6
 80008bc:	f000 f80c 	bl	80008d8 <__malloc_unlock>
 80008c0:	e794      	b.n	80007ec <_malloc_r+0x20>
 80008c2:	6005      	str	r5, [r0, #0]
 80008c4:	e7d6      	b.n	8000874 <_malloc_r+0xa8>
 80008c6:	bf00      	nop
 80008c8:	200001c4 	.word	0x200001c4

080008cc <__malloc_lock>:
 80008cc:	4801      	ldr	r0, [pc, #4]	@ (80008d4 <__malloc_lock+0x8>)
 80008ce:	f7ff bf0e 	b.w	80006ee <__retarget_lock_acquire_recursive>
 80008d2:	bf00      	nop
 80008d4:	200001bc 	.word	0x200001bc

080008d8 <__malloc_unlock>:
 80008d8:	4801      	ldr	r0, [pc, #4]	@ (80008e0 <__malloc_unlock+0x8>)
 80008da:	f7ff bf09 	b.w	80006f0 <__retarget_lock_release_recursive>
 80008de:	bf00      	nop
 80008e0:	200001bc 	.word	0x200001bc

080008e4 <__sfputc_r>:
 80008e4:	6893      	ldr	r3, [r2, #8]
 80008e6:	3b01      	subs	r3, #1
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	b410      	push	{r4}
 80008ec:	6093      	str	r3, [r2, #8]
 80008ee:	da08      	bge.n	8000902 <__sfputc_r+0x1e>
 80008f0:	6994      	ldr	r4, [r2, #24]
 80008f2:	42a3      	cmp	r3, r4
 80008f4:	db01      	blt.n	80008fa <__sfputc_r+0x16>
 80008f6:	290a      	cmp	r1, #10
 80008f8:	d103      	bne.n	8000902 <__sfputc_r+0x1e>
 80008fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008fe:	f000 bb6d 	b.w	8000fdc <__swbuf_r>
 8000902:	6813      	ldr	r3, [r2, #0]
 8000904:	1c58      	adds	r0, r3, #1
 8000906:	6010      	str	r0, [r2, #0]
 8000908:	7019      	strb	r1, [r3, #0]
 800090a:	4608      	mov	r0, r1
 800090c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000910:	4770      	bx	lr

08000912 <__sfputs_r>:
 8000912:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000914:	4606      	mov	r6, r0
 8000916:	460f      	mov	r7, r1
 8000918:	4614      	mov	r4, r2
 800091a:	18d5      	adds	r5, r2, r3
 800091c:	42ac      	cmp	r4, r5
 800091e:	d101      	bne.n	8000924 <__sfputs_r+0x12>
 8000920:	2000      	movs	r0, #0
 8000922:	e007      	b.n	8000934 <__sfputs_r+0x22>
 8000924:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000928:	463a      	mov	r2, r7
 800092a:	4630      	mov	r0, r6
 800092c:	f7ff ffda 	bl	80008e4 <__sfputc_r>
 8000930:	1c43      	adds	r3, r0, #1
 8000932:	d1f3      	bne.n	800091c <__sfputs_r+0xa>
 8000934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000938 <_vfiprintf_r>:
 8000938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800093c:	460d      	mov	r5, r1
 800093e:	b09d      	sub	sp, #116	@ 0x74
 8000940:	4614      	mov	r4, r2
 8000942:	4698      	mov	r8, r3
 8000944:	4606      	mov	r6, r0
 8000946:	b118      	cbz	r0, 8000950 <_vfiprintf_r+0x18>
 8000948:	6a03      	ldr	r3, [r0, #32]
 800094a:	b90b      	cbnz	r3, 8000950 <_vfiprintf_r+0x18>
 800094c:	f7ff fdca 	bl	80004e4 <__sinit>
 8000950:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000952:	07d9      	lsls	r1, r3, #31
 8000954:	d405      	bmi.n	8000962 <_vfiprintf_r+0x2a>
 8000956:	89ab      	ldrh	r3, [r5, #12]
 8000958:	059a      	lsls	r2, r3, #22
 800095a:	d402      	bmi.n	8000962 <_vfiprintf_r+0x2a>
 800095c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800095e:	f7ff fec6 	bl	80006ee <__retarget_lock_acquire_recursive>
 8000962:	89ab      	ldrh	r3, [r5, #12]
 8000964:	071b      	lsls	r3, r3, #28
 8000966:	d501      	bpl.n	800096c <_vfiprintf_r+0x34>
 8000968:	692b      	ldr	r3, [r5, #16]
 800096a:	b99b      	cbnz	r3, 8000994 <_vfiprintf_r+0x5c>
 800096c:	4629      	mov	r1, r5
 800096e:	4630      	mov	r0, r6
 8000970:	f000 fb72 	bl	8001058 <__swsetup_r>
 8000974:	b170      	cbz	r0, 8000994 <_vfiprintf_r+0x5c>
 8000976:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000978:	07dc      	lsls	r4, r3, #31
 800097a:	d504      	bpl.n	8000986 <_vfiprintf_r+0x4e>
 800097c:	f04f 30ff 	mov.w	r0, #4294967295
 8000980:	b01d      	add	sp, #116	@ 0x74
 8000982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000986:	89ab      	ldrh	r3, [r5, #12]
 8000988:	0598      	lsls	r0, r3, #22
 800098a:	d4f7      	bmi.n	800097c <_vfiprintf_r+0x44>
 800098c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800098e:	f7ff feaf 	bl	80006f0 <__retarget_lock_release_recursive>
 8000992:	e7f3      	b.n	800097c <_vfiprintf_r+0x44>
 8000994:	2300      	movs	r3, #0
 8000996:	9309      	str	r3, [sp, #36]	@ 0x24
 8000998:	2320      	movs	r3, #32
 800099a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800099e:	f8cd 800c 	str.w	r8, [sp, #12]
 80009a2:	2330      	movs	r3, #48	@ 0x30
 80009a4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000b54 <_vfiprintf_r+0x21c>
 80009a8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80009ac:	f04f 0901 	mov.w	r9, #1
 80009b0:	4623      	mov	r3, r4
 80009b2:	469a      	mov	sl, r3
 80009b4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009b8:	b10a      	cbz	r2, 80009be <_vfiprintf_r+0x86>
 80009ba:	2a25      	cmp	r2, #37	@ 0x25
 80009bc:	d1f9      	bne.n	80009b2 <_vfiprintf_r+0x7a>
 80009be:	ebba 0b04 	subs.w	fp, sl, r4
 80009c2:	d00b      	beq.n	80009dc <_vfiprintf_r+0xa4>
 80009c4:	465b      	mov	r3, fp
 80009c6:	4622      	mov	r2, r4
 80009c8:	4629      	mov	r1, r5
 80009ca:	4630      	mov	r0, r6
 80009cc:	f7ff ffa1 	bl	8000912 <__sfputs_r>
 80009d0:	3001      	adds	r0, #1
 80009d2:	f000 80a7 	beq.w	8000b24 <_vfiprintf_r+0x1ec>
 80009d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80009d8:	445a      	add	r2, fp
 80009da:	9209      	str	r2, [sp, #36]	@ 0x24
 80009dc:	f89a 3000 	ldrb.w	r3, [sl]
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	f000 809f 	beq.w	8000b24 <_vfiprintf_r+0x1ec>
 80009e6:	2300      	movs	r3, #0
 80009e8:	f04f 32ff 	mov.w	r2, #4294967295
 80009ec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009f0:	f10a 0a01 	add.w	sl, sl, #1
 80009f4:	9304      	str	r3, [sp, #16]
 80009f6:	9307      	str	r3, [sp, #28]
 80009f8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80009fc:	931a      	str	r3, [sp, #104]	@ 0x68
 80009fe:	4654      	mov	r4, sl
 8000a00:	2205      	movs	r2, #5
 8000a02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a06:	4853      	ldr	r0, [pc, #332]	@ (8000b54 <_vfiprintf_r+0x21c>)
 8000a08:	f7ff fbe2 	bl	80001d0 <memchr>
 8000a0c:	9a04      	ldr	r2, [sp, #16]
 8000a0e:	b9d8      	cbnz	r0, 8000a48 <_vfiprintf_r+0x110>
 8000a10:	06d1      	lsls	r1, r2, #27
 8000a12:	bf44      	itt	mi
 8000a14:	2320      	movmi	r3, #32
 8000a16:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a1a:	0713      	lsls	r3, r2, #28
 8000a1c:	bf44      	itt	mi
 8000a1e:	232b      	movmi	r3, #43	@ 0x2b
 8000a20:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a24:	f89a 3000 	ldrb.w	r3, [sl]
 8000a28:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a2a:	d015      	beq.n	8000a58 <_vfiprintf_r+0x120>
 8000a2c:	9a07      	ldr	r2, [sp, #28]
 8000a2e:	4654      	mov	r4, sl
 8000a30:	2000      	movs	r0, #0
 8000a32:	f04f 0c0a 	mov.w	ip, #10
 8000a36:	4621      	mov	r1, r4
 8000a38:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a3c:	3b30      	subs	r3, #48	@ 0x30
 8000a3e:	2b09      	cmp	r3, #9
 8000a40:	d94b      	bls.n	8000ada <_vfiprintf_r+0x1a2>
 8000a42:	b1b0      	cbz	r0, 8000a72 <_vfiprintf_r+0x13a>
 8000a44:	9207      	str	r2, [sp, #28]
 8000a46:	e014      	b.n	8000a72 <_vfiprintf_r+0x13a>
 8000a48:	eba0 0308 	sub.w	r3, r0, r8
 8000a4c:	fa09 f303 	lsl.w	r3, r9, r3
 8000a50:	4313      	orrs	r3, r2
 8000a52:	9304      	str	r3, [sp, #16]
 8000a54:	46a2      	mov	sl, r4
 8000a56:	e7d2      	b.n	80009fe <_vfiprintf_r+0xc6>
 8000a58:	9b03      	ldr	r3, [sp, #12]
 8000a5a:	1d19      	adds	r1, r3, #4
 8000a5c:	681b      	ldr	r3, [r3, #0]
 8000a5e:	9103      	str	r1, [sp, #12]
 8000a60:	2b00      	cmp	r3, #0
 8000a62:	bfbb      	ittet	lt
 8000a64:	425b      	neglt	r3, r3
 8000a66:	f042 0202 	orrlt.w	r2, r2, #2
 8000a6a:	9307      	strge	r3, [sp, #28]
 8000a6c:	9307      	strlt	r3, [sp, #28]
 8000a6e:	bfb8      	it	lt
 8000a70:	9204      	strlt	r2, [sp, #16]
 8000a72:	7823      	ldrb	r3, [r4, #0]
 8000a74:	2b2e      	cmp	r3, #46	@ 0x2e
 8000a76:	d10a      	bne.n	8000a8e <_vfiprintf_r+0x156>
 8000a78:	7863      	ldrb	r3, [r4, #1]
 8000a7a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a7c:	d132      	bne.n	8000ae4 <_vfiprintf_r+0x1ac>
 8000a7e:	9b03      	ldr	r3, [sp, #12]
 8000a80:	1d1a      	adds	r2, r3, #4
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	9203      	str	r2, [sp, #12]
 8000a86:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000a8a:	3402      	adds	r4, #2
 8000a8c:	9305      	str	r3, [sp, #20]
 8000a8e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000b64 <_vfiprintf_r+0x22c>
 8000a92:	7821      	ldrb	r1, [r4, #0]
 8000a94:	2203      	movs	r2, #3
 8000a96:	4650      	mov	r0, sl
 8000a98:	f7ff fb9a 	bl	80001d0 <memchr>
 8000a9c:	b138      	cbz	r0, 8000aae <_vfiprintf_r+0x176>
 8000a9e:	9b04      	ldr	r3, [sp, #16]
 8000aa0:	eba0 000a 	sub.w	r0, r0, sl
 8000aa4:	2240      	movs	r2, #64	@ 0x40
 8000aa6:	4082      	lsls	r2, r0
 8000aa8:	4313      	orrs	r3, r2
 8000aaa:	3401      	adds	r4, #1
 8000aac:	9304      	str	r3, [sp, #16]
 8000aae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ab2:	4829      	ldr	r0, [pc, #164]	@ (8000b58 <_vfiprintf_r+0x220>)
 8000ab4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000ab8:	2206      	movs	r2, #6
 8000aba:	f7ff fb89 	bl	80001d0 <memchr>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	d03f      	beq.n	8000b42 <_vfiprintf_r+0x20a>
 8000ac2:	4b26      	ldr	r3, [pc, #152]	@ (8000b5c <_vfiprintf_r+0x224>)
 8000ac4:	bb1b      	cbnz	r3, 8000b0e <_vfiprintf_r+0x1d6>
 8000ac6:	9b03      	ldr	r3, [sp, #12]
 8000ac8:	3307      	adds	r3, #7
 8000aca:	f023 0307 	bic.w	r3, r3, #7
 8000ace:	3308      	adds	r3, #8
 8000ad0:	9303      	str	r3, [sp, #12]
 8000ad2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000ad4:	443b      	add	r3, r7
 8000ad6:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ad8:	e76a      	b.n	80009b0 <_vfiprintf_r+0x78>
 8000ada:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ade:	460c      	mov	r4, r1
 8000ae0:	2001      	movs	r0, #1
 8000ae2:	e7a8      	b.n	8000a36 <_vfiprintf_r+0xfe>
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	3401      	adds	r4, #1
 8000ae8:	9305      	str	r3, [sp, #20]
 8000aea:	4619      	mov	r1, r3
 8000aec:	f04f 0c0a 	mov.w	ip, #10
 8000af0:	4620      	mov	r0, r4
 8000af2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000af6:	3a30      	subs	r2, #48	@ 0x30
 8000af8:	2a09      	cmp	r2, #9
 8000afa:	d903      	bls.n	8000b04 <_vfiprintf_r+0x1cc>
 8000afc:	2b00      	cmp	r3, #0
 8000afe:	d0c6      	beq.n	8000a8e <_vfiprintf_r+0x156>
 8000b00:	9105      	str	r1, [sp, #20]
 8000b02:	e7c4      	b.n	8000a8e <_vfiprintf_r+0x156>
 8000b04:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b08:	4604      	mov	r4, r0
 8000b0a:	2301      	movs	r3, #1
 8000b0c:	e7f0      	b.n	8000af0 <_vfiprintf_r+0x1b8>
 8000b0e:	ab03      	add	r3, sp, #12
 8000b10:	9300      	str	r3, [sp, #0]
 8000b12:	462a      	mov	r2, r5
 8000b14:	4b12      	ldr	r3, [pc, #72]	@ (8000b60 <_vfiprintf_r+0x228>)
 8000b16:	a904      	add	r1, sp, #16
 8000b18:	4630      	mov	r0, r6
 8000b1a:	f3af 8000 	nop.w
 8000b1e:	4607      	mov	r7, r0
 8000b20:	1c78      	adds	r0, r7, #1
 8000b22:	d1d6      	bne.n	8000ad2 <_vfiprintf_r+0x19a>
 8000b24:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b26:	07d9      	lsls	r1, r3, #31
 8000b28:	d405      	bmi.n	8000b36 <_vfiprintf_r+0x1fe>
 8000b2a:	89ab      	ldrh	r3, [r5, #12]
 8000b2c:	059a      	lsls	r2, r3, #22
 8000b2e:	d402      	bmi.n	8000b36 <_vfiprintf_r+0x1fe>
 8000b30:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b32:	f7ff fddd 	bl	80006f0 <__retarget_lock_release_recursive>
 8000b36:	89ab      	ldrh	r3, [r5, #12]
 8000b38:	065b      	lsls	r3, r3, #25
 8000b3a:	f53f af1f 	bmi.w	800097c <_vfiprintf_r+0x44>
 8000b3e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000b40:	e71e      	b.n	8000980 <_vfiprintf_r+0x48>
 8000b42:	ab03      	add	r3, sp, #12
 8000b44:	9300      	str	r3, [sp, #0]
 8000b46:	462a      	mov	r2, r5
 8000b48:	4b05      	ldr	r3, [pc, #20]	@ (8000b60 <_vfiprintf_r+0x228>)
 8000b4a:	a904      	add	r1, sp, #16
 8000b4c:	4630      	mov	r0, r6
 8000b4e:	f000 f879 	bl	8000c44 <_printf_i>
 8000b52:	e7e4      	b.n	8000b1e <_vfiprintf_r+0x1e6>
 8000b54:	08001307 	.word	0x08001307
 8000b58:	08001311 	.word	0x08001311
 8000b5c:	00000000 	.word	0x00000000
 8000b60:	08000913 	.word	0x08000913
 8000b64:	0800130d 	.word	0x0800130d

08000b68 <_printf_common>:
 8000b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b6c:	4616      	mov	r6, r2
 8000b6e:	4698      	mov	r8, r3
 8000b70:	688a      	ldr	r2, [r1, #8]
 8000b72:	690b      	ldr	r3, [r1, #16]
 8000b74:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000b78:	4293      	cmp	r3, r2
 8000b7a:	bfb8      	it	lt
 8000b7c:	4613      	movlt	r3, r2
 8000b7e:	6033      	str	r3, [r6, #0]
 8000b80:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000b84:	4607      	mov	r7, r0
 8000b86:	460c      	mov	r4, r1
 8000b88:	b10a      	cbz	r2, 8000b8e <_printf_common+0x26>
 8000b8a:	3301      	adds	r3, #1
 8000b8c:	6033      	str	r3, [r6, #0]
 8000b8e:	6823      	ldr	r3, [r4, #0]
 8000b90:	0699      	lsls	r1, r3, #26
 8000b92:	bf42      	ittt	mi
 8000b94:	6833      	ldrmi	r3, [r6, #0]
 8000b96:	3302      	addmi	r3, #2
 8000b98:	6033      	strmi	r3, [r6, #0]
 8000b9a:	6825      	ldr	r5, [r4, #0]
 8000b9c:	f015 0506 	ands.w	r5, r5, #6
 8000ba0:	d106      	bne.n	8000bb0 <_printf_common+0x48>
 8000ba2:	f104 0a19 	add.w	sl, r4, #25
 8000ba6:	68e3      	ldr	r3, [r4, #12]
 8000ba8:	6832      	ldr	r2, [r6, #0]
 8000baa:	1a9b      	subs	r3, r3, r2
 8000bac:	42ab      	cmp	r3, r5
 8000bae:	dc26      	bgt.n	8000bfe <_printf_common+0x96>
 8000bb0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000bb4:	6822      	ldr	r2, [r4, #0]
 8000bb6:	3b00      	subs	r3, #0
 8000bb8:	bf18      	it	ne
 8000bba:	2301      	movne	r3, #1
 8000bbc:	0692      	lsls	r2, r2, #26
 8000bbe:	d42b      	bmi.n	8000c18 <_printf_common+0xb0>
 8000bc0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000bc4:	4641      	mov	r1, r8
 8000bc6:	4638      	mov	r0, r7
 8000bc8:	47c8      	blx	r9
 8000bca:	3001      	adds	r0, #1
 8000bcc:	d01e      	beq.n	8000c0c <_printf_common+0xa4>
 8000bce:	6823      	ldr	r3, [r4, #0]
 8000bd0:	6922      	ldr	r2, [r4, #16]
 8000bd2:	f003 0306 	and.w	r3, r3, #6
 8000bd6:	2b04      	cmp	r3, #4
 8000bd8:	bf02      	ittt	eq
 8000bda:	68e5      	ldreq	r5, [r4, #12]
 8000bdc:	6833      	ldreq	r3, [r6, #0]
 8000bde:	1aed      	subeq	r5, r5, r3
 8000be0:	68a3      	ldr	r3, [r4, #8]
 8000be2:	bf0c      	ite	eq
 8000be4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000be8:	2500      	movne	r5, #0
 8000bea:	4293      	cmp	r3, r2
 8000bec:	bfc4      	itt	gt
 8000bee:	1a9b      	subgt	r3, r3, r2
 8000bf0:	18ed      	addgt	r5, r5, r3
 8000bf2:	2600      	movs	r6, #0
 8000bf4:	341a      	adds	r4, #26
 8000bf6:	42b5      	cmp	r5, r6
 8000bf8:	d11a      	bne.n	8000c30 <_printf_common+0xc8>
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	e008      	b.n	8000c10 <_printf_common+0xa8>
 8000bfe:	2301      	movs	r3, #1
 8000c00:	4652      	mov	r2, sl
 8000c02:	4641      	mov	r1, r8
 8000c04:	4638      	mov	r0, r7
 8000c06:	47c8      	blx	r9
 8000c08:	3001      	adds	r0, #1
 8000c0a:	d103      	bne.n	8000c14 <_printf_common+0xac>
 8000c0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c14:	3501      	adds	r5, #1
 8000c16:	e7c6      	b.n	8000ba6 <_printf_common+0x3e>
 8000c18:	18e1      	adds	r1, r4, r3
 8000c1a:	1c5a      	adds	r2, r3, #1
 8000c1c:	2030      	movs	r0, #48	@ 0x30
 8000c1e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000c22:	4422      	add	r2, r4
 8000c24:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000c28:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000c2c:	3302      	adds	r3, #2
 8000c2e:	e7c7      	b.n	8000bc0 <_printf_common+0x58>
 8000c30:	2301      	movs	r3, #1
 8000c32:	4622      	mov	r2, r4
 8000c34:	4641      	mov	r1, r8
 8000c36:	4638      	mov	r0, r7
 8000c38:	47c8      	blx	r9
 8000c3a:	3001      	adds	r0, #1
 8000c3c:	d0e6      	beq.n	8000c0c <_printf_common+0xa4>
 8000c3e:	3601      	adds	r6, #1
 8000c40:	e7d9      	b.n	8000bf6 <_printf_common+0x8e>
	...

08000c44 <_printf_i>:
 8000c44:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c48:	7e0f      	ldrb	r7, [r1, #24]
 8000c4a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000c4c:	2f78      	cmp	r7, #120	@ 0x78
 8000c4e:	4691      	mov	r9, r2
 8000c50:	4680      	mov	r8, r0
 8000c52:	460c      	mov	r4, r1
 8000c54:	469a      	mov	sl, r3
 8000c56:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000c5a:	d807      	bhi.n	8000c6c <_printf_i+0x28>
 8000c5c:	2f62      	cmp	r7, #98	@ 0x62
 8000c5e:	d80a      	bhi.n	8000c76 <_printf_i+0x32>
 8000c60:	2f00      	cmp	r7, #0
 8000c62:	f000 80d2 	beq.w	8000e0a <_printf_i+0x1c6>
 8000c66:	2f58      	cmp	r7, #88	@ 0x58
 8000c68:	f000 80b9 	beq.w	8000dde <_printf_i+0x19a>
 8000c6c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c70:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000c74:	e03a      	b.n	8000cec <_printf_i+0xa8>
 8000c76:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000c7a:	2b15      	cmp	r3, #21
 8000c7c:	d8f6      	bhi.n	8000c6c <_printf_i+0x28>
 8000c7e:	a101      	add	r1, pc, #4	@ (adr r1, 8000c84 <_printf_i+0x40>)
 8000c80:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c84:	08000cdd 	.word	0x08000cdd
 8000c88:	08000cf1 	.word	0x08000cf1
 8000c8c:	08000c6d 	.word	0x08000c6d
 8000c90:	08000c6d 	.word	0x08000c6d
 8000c94:	08000c6d 	.word	0x08000c6d
 8000c98:	08000c6d 	.word	0x08000c6d
 8000c9c:	08000cf1 	.word	0x08000cf1
 8000ca0:	08000c6d 	.word	0x08000c6d
 8000ca4:	08000c6d 	.word	0x08000c6d
 8000ca8:	08000c6d 	.word	0x08000c6d
 8000cac:	08000c6d 	.word	0x08000c6d
 8000cb0:	08000df1 	.word	0x08000df1
 8000cb4:	08000d1b 	.word	0x08000d1b
 8000cb8:	08000dab 	.word	0x08000dab
 8000cbc:	08000c6d 	.word	0x08000c6d
 8000cc0:	08000c6d 	.word	0x08000c6d
 8000cc4:	08000e13 	.word	0x08000e13
 8000cc8:	08000c6d 	.word	0x08000c6d
 8000ccc:	08000d1b 	.word	0x08000d1b
 8000cd0:	08000c6d 	.word	0x08000c6d
 8000cd4:	08000c6d 	.word	0x08000c6d
 8000cd8:	08000db3 	.word	0x08000db3
 8000cdc:	6833      	ldr	r3, [r6, #0]
 8000cde:	1d1a      	adds	r2, r3, #4
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	6032      	str	r2, [r6, #0]
 8000ce4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ce8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000cec:	2301      	movs	r3, #1
 8000cee:	e09d      	b.n	8000e2c <_printf_i+0x1e8>
 8000cf0:	6833      	ldr	r3, [r6, #0]
 8000cf2:	6820      	ldr	r0, [r4, #0]
 8000cf4:	1d19      	adds	r1, r3, #4
 8000cf6:	6031      	str	r1, [r6, #0]
 8000cf8:	0606      	lsls	r6, r0, #24
 8000cfa:	d501      	bpl.n	8000d00 <_printf_i+0xbc>
 8000cfc:	681d      	ldr	r5, [r3, #0]
 8000cfe:	e003      	b.n	8000d08 <_printf_i+0xc4>
 8000d00:	0645      	lsls	r5, r0, #25
 8000d02:	d5fb      	bpl.n	8000cfc <_printf_i+0xb8>
 8000d04:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000d08:	2d00      	cmp	r5, #0
 8000d0a:	da03      	bge.n	8000d14 <_printf_i+0xd0>
 8000d0c:	232d      	movs	r3, #45	@ 0x2d
 8000d0e:	426d      	negs	r5, r5
 8000d10:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d14:	4859      	ldr	r0, [pc, #356]	@ (8000e7c <_printf_i+0x238>)
 8000d16:	230a      	movs	r3, #10
 8000d18:	e011      	b.n	8000d3e <_printf_i+0xfa>
 8000d1a:	6821      	ldr	r1, [r4, #0]
 8000d1c:	6833      	ldr	r3, [r6, #0]
 8000d1e:	0608      	lsls	r0, r1, #24
 8000d20:	f853 5b04 	ldr.w	r5, [r3], #4
 8000d24:	d402      	bmi.n	8000d2c <_printf_i+0xe8>
 8000d26:	0649      	lsls	r1, r1, #25
 8000d28:	bf48      	it	mi
 8000d2a:	b2ad      	uxthmi	r5, r5
 8000d2c:	2f6f      	cmp	r7, #111	@ 0x6f
 8000d2e:	4853      	ldr	r0, [pc, #332]	@ (8000e7c <_printf_i+0x238>)
 8000d30:	6033      	str	r3, [r6, #0]
 8000d32:	bf14      	ite	ne
 8000d34:	230a      	movne	r3, #10
 8000d36:	2308      	moveq	r3, #8
 8000d38:	2100      	movs	r1, #0
 8000d3a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d3e:	6866      	ldr	r6, [r4, #4]
 8000d40:	60a6      	str	r6, [r4, #8]
 8000d42:	2e00      	cmp	r6, #0
 8000d44:	bfa2      	ittt	ge
 8000d46:	6821      	ldrge	r1, [r4, #0]
 8000d48:	f021 0104 	bicge.w	r1, r1, #4
 8000d4c:	6021      	strge	r1, [r4, #0]
 8000d4e:	b90d      	cbnz	r5, 8000d54 <_printf_i+0x110>
 8000d50:	2e00      	cmp	r6, #0
 8000d52:	d04b      	beq.n	8000dec <_printf_i+0x1a8>
 8000d54:	4616      	mov	r6, r2
 8000d56:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d5a:	fb03 5711 	mls	r7, r3, r1, r5
 8000d5e:	5dc7      	ldrb	r7, [r0, r7]
 8000d60:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d64:	462f      	mov	r7, r5
 8000d66:	42bb      	cmp	r3, r7
 8000d68:	460d      	mov	r5, r1
 8000d6a:	d9f4      	bls.n	8000d56 <_printf_i+0x112>
 8000d6c:	2b08      	cmp	r3, #8
 8000d6e:	d10b      	bne.n	8000d88 <_printf_i+0x144>
 8000d70:	6823      	ldr	r3, [r4, #0]
 8000d72:	07df      	lsls	r7, r3, #31
 8000d74:	d508      	bpl.n	8000d88 <_printf_i+0x144>
 8000d76:	6923      	ldr	r3, [r4, #16]
 8000d78:	6861      	ldr	r1, [r4, #4]
 8000d7a:	4299      	cmp	r1, r3
 8000d7c:	bfde      	ittt	le
 8000d7e:	2330      	movle	r3, #48	@ 0x30
 8000d80:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d84:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000d88:	1b92      	subs	r2, r2, r6
 8000d8a:	6122      	str	r2, [r4, #16]
 8000d8c:	f8cd a000 	str.w	sl, [sp]
 8000d90:	464b      	mov	r3, r9
 8000d92:	aa03      	add	r2, sp, #12
 8000d94:	4621      	mov	r1, r4
 8000d96:	4640      	mov	r0, r8
 8000d98:	f7ff fee6 	bl	8000b68 <_printf_common>
 8000d9c:	3001      	adds	r0, #1
 8000d9e:	d14a      	bne.n	8000e36 <_printf_i+0x1f2>
 8000da0:	f04f 30ff 	mov.w	r0, #4294967295
 8000da4:	b004      	add	sp, #16
 8000da6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000daa:	6823      	ldr	r3, [r4, #0]
 8000dac:	f043 0320 	orr.w	r3, r3, #32
 8000db0:	6023      	str	r3, [r4, #0]
 8000db2:	4833      	ldr	r0, [pc, #204]	@ (8000e80 <_printf_i+0x23c>)
 8000db4:	2778      	movs	r7, #120	@ 0x78
 8000db6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000dba:	6823      	ldr	r3, [r4, #0]
 8000dbc:	6831      	ldr	r1, [r6, #0]
 8000dbe:	061f      	lsls	r7, r3, #24
 8000dc0:	f851 5b04 	ldr.w	r5, [r1], #4
 8000dc4:	d402      	bmi.n	8000dcc <_printf_i+0x188>
 8000dc6:	065f      	lsls	r7, r3, #25
 8000dc8:	bf48      	it	mi
 8000dca:	b2ad      	uxthmi	r5, r5
 8000dcc:	6031      	str	r1, [r6, #0]
 8000dce:	07d9      	lsls	r1, r3, #31
 8000dd0:	bf44      	itt	mi
 8000dd2:	f043 0320 	orrmi.w	r3, r3, #32
 8000dd6:	6023      	strmi	r3, [r4, #0]
 8000dd8:	b11d      	cbz	r5, 8000de2 <_printf_i+0x19e>
 8000dda:	2310      	movs	r3, #16
 8000ddc:	e7ac      	b.n	8000d38 <_printf_i+0xf4>
 8000dde:	4827      	ldr	r0, [pc, #156]	@ (8000e7c <_printf_i+0x238>)
 8000de0:	e7e9      	b.n	8000db6 <_printf_i+0x172>
 8000de2:	6823      	ldr	r3, [r4, #0]
 8000de4:	f023 0320 	bic.w	r3, r3, #32
 8000de8:	6023      	str	r3, [r4, #0]
 8000dea:	e7f6      	b.n	8000dda <_printf_i+0x196>
 8000dec:	4616      	mov	r6, r2
 8000dee:	e7bd      	b.n	8000d6c <_printf_i+0x128>
 8000df0:	6833      	ldr	r3, [r6, #0]
 8000df2:	6825      	ldr	r5, [r4, #0]
 8000df4:	6961      	ldr	r1, [r4, #20]
 8000df6:	1d18      	adds	r0, r3, #4
 8000df8:	6030      	str	r0, [r6, #0]
 8000dfa:	062e      	lsls	r6, r5, #24
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	d501      	bpl.n	8000e04 <_printf_i+0x1c0>
 8000e00:	6019      	str	r1, [r3, #0]
 8000e02:	e002      	b.n	8000e0a <_printf_i+0x1c6>
 8000e04:	0668      	lsls	r0, r5, #25
 8000e06:	d5fb      	bpl.n	8000e00 <_printf_i+0x1bc>
 8000e08:	8019      	strh	r1, [r3, #0]
 8000e0a:	2300      	movs	r3, #0
 8000e0c:	6123      	str	r3, [r4, #16]
 8000e0e:	4616      	mov	r6, r2
 8000e10:	e7bc      	b.n	8000d8c <_printf_i+0x148>
 8000e12:	6833      	ldr	r3, [r6, #0]
 8000e14:	1d1a      	adds	r2, r3, #4
 8000e16:	6032      	str	r2, [r6, #0]
 8000e18:	681e      	ldr	r6, [r3, #0]
 8000e1a:	6862      	ldr	r2, [r4, #4]
 8000e1c:	2100      	movs	r1, #0
 8000e1e:	4630      	mov	r0, r6
 8000e20:	f7ff f9d6 	bl	80001d0 <memchr>
 8000e24:	b108      	cbz	r0, 8000e2a <_printf_i+0x1e6>
 8000e26:	1b80      	subs	r0, r0, r6
 8000e28:	6060      	str	r0, [r4, #4]
 8000e2a:	6863      	ldr	r3, [r4, #4]
 8000e2c:	6123      	str	r3, [r4, #16]
 8000e2e:	2300      	movs	r3, #0
 8000e30:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e34:	e7aa      	b.n	8000d8c <_printf_i+0x148>
 8000e36:	6923      	ldr	r3, [r4, #16]
 8000e38:	4632      	mov	r2, r6
 8000e3a:	4649      	mov	r1, r9
 8000e3c:	4640      	mov	r0, r8
 8000e3e:	47d0      	blx	sl
 8000e40:	3001      	adds	r0, #1
 8000e42:	d0ad      	beq.n	8000da0 <_printf_i+0x15c>
 8000e44:	6823      	ldr	r3, [r4, #0]
 8000e46:	079b      	lsls	r3, r3, #30
 8000e48:	d413      	bmi.n	8000e72 <_printf_i+0x22e>
 8000e4a:	68e0      	ldr	r0, [r4, #12]
 8000e4c:	9b03      	ldr	r3, [sp, #12]
 8000e4e:	4298      	cmp	r0, r3
 8000e50:	bfb8      	it	lt
 8000e52:	4618      	movlt	r0, r3
 8000e54:	e7a6      	b.n	8000da4 <_printf_i+0x160>
 8000e56:	2301      	movs	r3, #1
 8000e58:	4632      	mov	r2, r6
 8000e5a:	4649      	mov	r1, r9
 8000e5c:	4640      	mov	r0, r8
 8000e5e:	47d0      	blx	sl
 8000e60:	3001      	adds	r0, #1
 8000e62:	d09d      	beq.n	8000da0 <_printf_i+0x15c>
 8000e64:	3501      	adds	r5, #1
 8000e66:	68e3      	ldr	r3, [r4, #12]
 8000e68:	9903      	ldr	r1, [sp, #12]
 8000e6a:	1a5b      	subs	r3, r3, r1
 8000e6c:	42ab      	cmp	r3, r5
 8000e6e:	dcf2      	bgt.n	8000e56 <_printf_i+0x212>
 8000e70:	e7eb      	b.n	8000e4a <_printf_i+0x206>
 8000e72:	2500      	movs	r5, #0
 8000e74:	f104 0619 	add.w	r6, r4, #25
 8000e78:	e7f5      	b.n	8000e66 <_printf_i+0x222>
 8000e7a:	bf00      	nop
 8000e7c:	08001318 	.word	0x08001318
 8000e80:	08001329 	.word	0x08001329

08000e84 <__sflush_r>:
 8000e84:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e8c:	0716      	lsls	r6, r2, #28
 8000e8e:	4605      	mov	r5, r0
 8000e90:	460c      	mov	r4, r1
 8000e92:	d454      	bmi.n	8000f3e <__sflush_r+0xba>
 8000e94:	684b      	ldr	r3, [r1, #4]
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	dc02      	bgt.n	8000ea0 <__sflush_r+0x1c>
 8000e9a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000e9c:	2b00      	cmp	r3, #0
 8000e9e:	dd48      	ble.n	8000f32 <__sflush_r+0xae>
 8000ea0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000ea2:	2e00      	cmp	r6, #0
 8000ea4:	d045      	beq.n	8000f32 <__sflush_r+0xae>
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000eac:	682f      	ldr	r7, [r5, #0]
 8000eae:	6a21      	ldr	r1, [r4, #32]
 8000eb0:	602b      	str	r3, [r5, #0]
 8000eb2:	d030      	beq.n	8000f16 <__sflush_r+0x92>
 8000eb4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000eb6:	89a3      	ldrh	r3, [r4, #12]
 8000eb8:	0759      	lsls	r1, r3, #29
 8000eba:	d505      	bpl.n	8000ec8 <__sflush_r+0x44>
 8000ebc:	6863      	ldr	r3, [r4, #4]
 8000ebe:	1ad2      	subs	r2, r2, r3
 8000ec0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000ec2:	b10b      	cbz	r3, 8000ec8 <__sflush_r+0x44>
 8000ec4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000ec6:	1ad2      	subs	r2, r2, r3
 8000ec8:	2300      	movs	r3, #0
 8000eca:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000ecc:	6a21      	ldr	r1, [r4, #32]
 8000ece:	4628      	mov	r0, r5
 8000ed0:	47b0      	blx	r6
 8000ed2:	1c43      	adds	r3, r0, #1
 8000ed4:	89a3      	ldrh	r3, [r4, #12]
 8000ed6:	d106      	bne.n	8000ee6 <__sflush_r+0x62>
 8000ed8:	6829      	ldr	r1, [r5, #0]
 8000eda:	291d      	cmp	r1, #29
 8000edc:	d82b      	bhi.n	8000f36 <__sflush_r+0xb2>
 8000ede:	4a2a      	ldr	r2, [pc, #168]	@ (8000f88 <__sflush_r+0x104>)
 8000ee0:	410a      	asrs	r2, r1
 8000ee2:	07d6      	lsls	r6, r2, #31
 8000ee4:	d427      	bmi.n	8000f36 <__sflush_r+0xb2>
 8000ee6:	2200      	movs	r2, #0
 8000ee8:	6062      	str	r2, [r4, #4]
 8000eea:	04d9      	lsls	r1, r3, #19
 8000eec:	6922      	ldr	r2, [r4, #16]
 8000eee:	6022      	str	r2, [r4, #0]
 8000ef0:	d504      	bpl.n	8000efc <__sflush_r+0x78>
 8000ef2:	1c42      	adds	r2, r0, #1
 8000ef4:	d101      	bne.n	8000efa <__sflush_r+0x76>
 8000ef6:	682b      	ldr	r3, [r5, #0]
 8000ef8:	b903      	cbnz	r3, 8000efc <__sflush_r+0x78>
 8000efa:	6560      	str	r0, [r4, #84]	@ 0x54
 8000efc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000efe:	602f      	str	r7, [r5, #0]
 8000f00:	b1b9      	cbz	r1, 8000f32 <__sflush_r+0xae>
 8000f02:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000f06:	4299      	cmp	r1, r3
 8000f08:	d002      	beq.n	8000f10 <__sflush_r+0x8c>
 8000f0a:	4628      	mov	r0, r5
 8000f0c:	f7ff fbf2 	bl	80006f4 <_free_r>
 8000f10:	2300      	movs	r3, #0
 8000f12:	6363      	str	r3, [r4, #52]	@ 0x34
 8000f14:	e00d      	b.n	8000f32 <__sflush_r+0xae>
 8000f16:	2301      	movs	r3, #1
 8000f18:	4628      	mov	r0, r5
 8000f1a:	47b0      	blx	r6
 8000f1c:	4602      	mov	r2, r0
 8000f1e:	1c50      	adds	r0, r2, #1
 8000f20:	d1c9      	bne.n	8000eb6 <__sflush_r+0x32>
 8000f22:	682b      	ldr	r3, [r5, #0]
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	d0c6      	beq.n	8000eb6 <__sflush_r+0x32>
 8000f28:	2b1d      	cmp	r3, #29
 8000f2a:	d001      	beq.n	8000f30 <__sflush_r+0xac>
 8000f2c:	2b16      	cmp	r3, #22
 8000f2e:	d11e      	bne.n	8000f6e <__sflush_r+0xea>
 8000f30:	602f      	str	r7, [r5, #0]
 8000f32:	2000      	movs	r0, #0
 8000f34:	e022      	b.n	8000f7c <__sflush_r+0xf8>
 8000f36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f3a:	b21b      	sxth	r3, r3
 8000f3c:	e01b      	b.n	8000f76 <__sflush_r+0xf2>
 8000f3e:	690f      	ldr	r7, [r1, #16]
 8000f40:	2f00      	cmp	r7, #0
 8000f42:	d0f6      	beq.n	8000f32 <__sflush_r+0xae>
 8000f44:	0793      	lsls	r3, r2, #30
 8000f46:	680e      	ldr	r6, [r1, #0]
 8000f48:	bf08      	it	eq
 8000f4a:	694b      	ldreq	r3, [r1, #20]
 8000f4c:	600f      	str	r7, [r1, #0]
 8000f4e:	bf18      	it	ne
 8000f50:	2300      	movne	r3, #0
 8000f52:	eba6 0807 	sub.w	r8, r6, r7
 8000f56:	608b      	str	r3, [r1, #8]
 8000f58:	f1b8 0f00 	cmp.w	r8, #0
 8000f5c:	dde9      	ble.n	8000f32 <__sflush_r+0xae>
 8000f5e:	6a21      	ldr	r1, [r4, #32]
 8000f60:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000f62:	4643      	mov	r3, r8
 8000f64:	463a      	mov	r2, r7
 8000f66:	4628      	mov	r0, r5
 8000f68:	47b0      	blx	r6
 8000f6a:	2800      	cmp	r0, #0
 8000f6c:	dc08      	bgt.n	8000f80 <__sflush_r+0xfc>
 8000f6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f72:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f76:	81a3      	strh	r3, [r4, #12]
 8000f78:	f04f 30ff 	mov.w	r0, #4294967295
 8000f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f80:	4407      	add	r7, r0
 8000f82:	eba8 0800 	sub.w	r8, r8, r0
 8000f86:	e7e7      	b.n	8000f58 <__sflush_r+0xd4>
 8000f88:	dfbffffe 	.word	0xdfbffffe

08000f8c <_fflush_r>:
 8000f8c:	b538      	push	{r3, r4, r5, lr}
 8000f8e:	690b      	ldr	r3, [r1, #16]
 8000f90:	4605      	mov	r5, r0
 8000f92:	460c      	mov	r4, r1
 8000f94:	b913      	cbnz	r3, 8000f9c <_fflush_r+0x10>
 8000f96:	2500      	movs	r5, #0
 8000f98:	4628      	mov	r0, r5
 8000f9a:	bd38      	pop	{r3, r4, r5, pc}
 8000f9c:	b118      	cbz	r0, 8000fa6 <_fflush_r+0x1a>
 8000f9e:	6a03      	ldr	r3, [r0, #32]
 8000fa0:	b90b      	cbnz	r3, 8000fa6 <_fflush_r+0x1a>
 8000fa2:	f7ff fa9f 	bl	80004e4 <__sinit>
 8000fa6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d0f3      	beq.n	8000f96 <_fflush_r+0xa>
 8000fae:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000fb0:	07d0      	lsls	r0, r2, #31
 8000fb2:	d404      	bmi.n	8000fbe <_fflush_r+0x32>
 8000fb4:	0599      	lsls	r1, r3, #22
 8000fb6:	d402      	bmi.n	8000fbe <_fflush_r+0x32>
 8000fb8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000fba:	f7ff fb98 	bl	80006ee <__retarget_lock_acquire_recursive>
 8000fbe:	4628      	mov	r0, r5
 8000fc0:	4621      	mov	r1, r4
 8000fc2:	f7ff ff5f 	bl	8000e84 <__sflush_r>
 8000fc6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000fc8:	07da      	lsls	r2, r3, #31
 8000fca:	4605      	mov	r5, r0
 8000fcc:	d4e4      	bmi.n	8000f98 <_fflush_r+0xc>
 8000fce:	89a3      	ldrh	r3, [r4, #12]
 8000fd0:	059b      	lsls	r3, r3, #22
 8000fd2:	d4e1      	bmi.n	8000f98 <_fflush_r+0xc>
 8000fd4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000fd6:	f7ff fb8b 	bl	80006f0 <__retarget_lock_release_recursive>
 8000fda:	e7dd      	b.n	8000f98 <_fflush_r+0xc>

08000fdc <__swbuf_r>:
 8000fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fde:	460e      	mov	r6, r1
 8000fe0:	4614      	mov	r4, r2
 8000fe2:	4605      	mov	r5, r0
 8000fe4:	b118      	cbz	r0, 8000fee <__swbuf_r+0x12>
 8000fe6:	6a03      	ldr	r3, [r0, #32]
 8000fe8:	b90b      	cbnz	r3, 8000fee <__swbuf_r+0x12>
 8000fea:	f7ff fa7b 	bl	80004e4 <__sinit>
 8000fee:	69a3      	ldr	r3, [r4, #24]
 8000ff0:	60a3      	str	r3, [r4, #8]
 8000ff2:	89a3      	ldrh	r3, [r4, #12]
 8000ff4:	071a      	lsls	r2, r3, #28
 8000ff6:	d501      	bpl.n	8000ffc <__swbuf_r+0x20>
 8000ff8:	6923      	ldr	r3, [r4, #16]
 8000ffa:	b943      	cbnz	r3, 800100e <__swbuf_r+0x32>
 8000ffc:	4621      	mov	r1, r4
 8000ffe:	4628      	mov	r0, r5
 8001000:	f000 f82a 	bl	8001058 <__swsetup_r>
 8001004:	b118      	cbz	r0, 800100e <__swbuf_r+0x32>
 8001006:	f04f 37ff 	mov.w	r7, #4294967295
 800100a:	4638      	mov	r0, r7
 800100c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800100e:	6823      	ldr	r3, [r4, #0]
 8001010:	6922      	ldr	r2, [r4, #16]
 8001012:	1a98      	subs	r0, r3, r2
 8001014:	6963      	ldr	r3, [r4, #20]
 8001016:	b2f6      	uxtb	r6, r6
 8001018:	4283      	cmp	r3, r0
 800101a:	4637      	mov	r7, r6
 800101c:	dc05      	bgt.n	800102a <__swbuf_r+0x4e>
 800101e:	4621      	mov	r1, r4
 8001020:	4628      	mov	r0, r5
 8001022:	f7ff ffb3 	bl	8000f8c <_fflush_r>
 8001026:	2800      	cmp	r0, #0
 8001028:	d1ed      	bne.n	8001006 <__swbuf_r+0x2a>
 800102a:	68a3      	ldr	r3, [r4, #8]
 800102c:	3b01      	subs	r3, #1
 800102e:	60a3      	str	r3, [r4, #8]
 8001030:	6823      	ldr	r3, [r4, #0]
 8001032:	1c5a      	adds	r2, r3, #1
 8001034:	6022      	str	r2, [r4, #0]
 8001036:	701e      	strb	r6, [r3, #0]
 8001038:	6962      	ldr	r2, [r4, #20]
 800103a:	1c43      	adds	r3, r0, #1
 800103c:	429a      	cmp	r2, r3
 800103e:	d004      	beq.n	800104a <__swbuf_r+0x6e>
 8001040:	89a3      	ldrh	r3, [r4, #12]
 8001042:	07db      	lsls	r3, r3, #31
 8001044:	d5e1      	bpl.n	800100a <__swbuf_r+0x2e>
 8001046:	2e0a      	cmp	r6, #10
 8001048:	d1df      	bne.n	800100a <__swbuf_r+0x2e>
 800104a:	4621      	mov	r1, r4
 800104c:	4628      	mov	r0, r5
 800104e:	f7ff ff9d 	bl	8000f8c <_fflush_r>
 8001052:	2800      	cmp	r0, #0
 8001054:	d0d9      	beq.n	800100a <__swbuf_r+0x2e>
 8001056:	e7d6      	b.n	8001006 <__swbuf_r+0x2a>

08001058 <__swsetup_r>:
 8001058:	b538      	push	{r3, r4, r5, lr}
 800105a:	4b29      	ldr	r3, [pc, #164]	@ (8001100 <__swsetup_r+0xa8>)
 800105c:	4605      	mov	r5, r0
 800105e:	6818      	ldr	r0, [r3, #0]
 8001060:	460c      	mov	r4, r1
 8001062:	b118      	cbz	r0, 800106c <__swsetup_r+0x14>
 8001064:	6a03      	ldr	r3, [r0, #32]
 8001066:	b90b      	cbnz	r3, 800106c <__swsetup_r+0x14>
 8001068:	f7ff fa3c 	bl	80004e4 <__sinit>
 800106c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001070:	0719      	lsls	r1, r3, #28
 8001072:	d422      	bmi.n	80010ba <__swsetup_r+0x62>
 8001074:	06da      	lsls	r2, r3, #27
 8001076:	d407      	bmi.n	8001088 <__swsetup_r+0x30>
 8001078:	2209      	movs	r2, #9
 800107a:	602a      	str	r2, [r5, #0]
 800107c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001080:	81a3      	strh	r3, [r4, #12]
 8001082:	f04f 30ff 	mov.w	r0, #4294967295
 8001086:	e033      	b.n	80010f0 <__swsetup_r+0x98>
 8001088:	0758      	lsls	r0, r3, #29
 800108a:	d512      	bpl.n	80010b2 <__swsetup_r+0x5a>
 800108c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800108e:	b141      	cbz	r1, 80010a2 <__swsetup_r+0x4a>
 8001090:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001094:	4299      	cmp	r1, r3
 8001096:	d002      	beq.n	800109e <__swsetup_r+0x46>
 8001098:	4628      	mov	r0, r5
 800109a:	f7ff fb2b 	bl	80006f4 <_free_r>
 800109e:	2300      	movs	r3, #0
 80010a0:	6363      	str	r3, [r4, #52]	@ 0x34
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80010a8:	81a3      	strh	r3, [r4, #12]
 80010aa:	2300      	movs	r3, #0
 80010ac:	6063      	str	r3, [r4, #4]
 80010ae:	6923      	ldr	r3, [r4, #16]
 80010b0:	6023      	str	r3, [r4, #0]
 80010b2:	89a3      	ldrh	r3, [r4, #12]
 80010b4:	f043 0308 	orr.w	r3, r3, #8
 80010b8:	81a3      	strh	r3, [r4, #12]
 80010ba:	6923      	ldr	r3, [r4, #16]
 80010bc:	b94b      	cbnz	r3, 80010d2 <__swsetup_r+0x7a>
 80010be:	89a3      	ldrh	r3, [r4, #12]
 80010c0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80010c4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80010c8:	d003      	beq.n	80010d2 <__swsetup_r+0x7a>
 80010ca:	4621      	mov	r1, r4
 80010cc:	4628      	mov	r0, r5
 80010ce:	f000 f84f 	bl	8001170 <__smakebuf_r>
 80010d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010d6:	f013 0201 	ands.w	r2, r3, #1
 80010da:	d00a      	beq.n	80010f2 <__swsetup_r+0x9a>
 80010dc:	2200      	movs	r2, #0
 80010de:	60a2      	str	r2, [r4, #8]
 80010e0:	6962      	ldr	r2, [r4, #20]
 80010e2:	4252      	negs	r2, r2
 80010e4:	61a2      	str	r2, [r4, #24]
 80010e6:	6922      	ldr	r2, [r4, #16]
 80010e8:	b942      	cbnz	r2, 80010fc <__swsetup_r+0xa4>
 80010ea:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80010ee:	d1c5      	bne.n	800107c <__swsetup_r+0x24>
 80010f0:	bd38      	pop	{r3, r4, r5, pc}
 80010f2:	0799      	lsls	r1, r3, #30
 80010f4:	bf58      	it	pl
 80010f6:	6962      	ldrpl	r2, [r4, #20]
 80010f8:	60a2      	str	r2, [r4, #8]
 80010fa:	e7f4      	b.n	80010e6 <__swsetup_r+0x8e>
 80010fc:	2000      	movs	r0, #0
 80010fe:	e7f7      	b.n	80010f0 <__swsetup_r+0x98>
 8001100:	2000000c 	.word	0x2000000c

08001104 <_sbrk_r>:
 8001104:	b538      	push	{r3, r4, r5, lr}
 8001106:	4d06      	ldr	r5, [pc, #24]	@ (8001120 <_sbrk_r+0x1c>)
 8001108:	2300      	movs	r3, #0
 800110a:	4604      	mov	r4, r0
 800110c:	4608      	mov	r0, r1
 800110e:	602b      	str	r3, [r5, #0]
 8001110:	f7ff f910 	bl	8000334 <_sbrk>
 8001114:	1c43      	adds	r3, r0, #1
 8001116:	d102      	bne.n	800111e <_sbrk_r+0x1a>
 8001118:	682b      	ldr	r3, [r5, #0]
 800111a:	b103      	cbz	r3, 800111e <_sbrk_r+0x1a>
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	bd38      	pop	{r3, r4, r5, pc}
 8001120:	200001b8 	.word	0x200001b8

08001124 <__swhatbuf_r>:
 8001124:	b570      	push	{r4, r5, r6, lr}
 8001126:	460c      	mov	r4, r1
 8001128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800112c:	2900      	cmp	r1, #0
 800112e:	b096      	sub	sp, #88	@ 0x58
 8001130:	4615      	mov	r5, r2
 8001132:	461e      	mov	r6, r3
 8001134:	da0d      	bge.n	8001152 <__swhatbuf_r+0x2e>
 8001136:	89a3      	ldrh	r3, [r4, #12]
 8001138:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800113c:	f04f 0100 	mov.w	r1, #0
 8001140:	bf14      	ite	ne
 8001142:	2340      	movne	r3, #64	@ 0x40
 8001144:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001148:	2000      	movs	r0, #0
 800114a:	6031      	str	r1, [r6, #0]
 800114c:	602b      	str	r3, [r5, #0]
 800114e:	b016      	add	sp, #88	@ 0x58
 8001150:	bd70      	pop	{r4, r5, r6, pc}
 8001152:	466a      	mov	r2, sp
 8001154:	f000 f848 	bl	80011e8 <_fstat_r>
 8001158:	2800      	cmp	r0, #0
 800115a:	dbec      	blt.n	8001136 <__swhatbuf_r+0x12>
 800115c:	9901      	ldr	r1, [sp, #4]
 800115e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001162:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001166:	4259      	negs	r1, r3
 8001168:	4159      	adcs	r1, r3
 800116a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800116e:	e7eb      	b.n	8001148 <__swhatbuf_r+0x24>

08001170 <__smakebuf_r>:
 8001170:	898b      	ldrh	r3, [r1, #12]
 8001172:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001174:	079d      	lsls	r5, r3, #30
 8001176:	4606      	mov	r6, r0
 8001178:	460c      	mov	r4, r1
 800117a:	d507      	bpl.n	800118c <__smakebuf_r+0x1c>
 800117c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001180:	6023      	str	r3, [r4, #0]
 8001182:	6123      	str	r3, [r4, #16]
 8001184:	2301      	movs	r3, #1
 8001186:	6163      	str	r3, [r4, #20]
 8001188:	b003      	add	sp, #12
 800118a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800118c:	ab01      	add	r3, sp, #4
 800118e:	466a      	mov	r2, sp
 8001190:	f7ff ffc8 	bl	8001124 <__swhatbuf_r>
 8001194:	9f00      	ldr	r7, [sp, #0]
 8001196:	4605      	mov	r5, r0
 8001198:	4639      	mov	r1, r7
 800119a:	4630      	mov	r0, r6
 800119c:	f7ff fb16 	bl	80007cc <_malloc_r>
 80011a0:	b948      	cbnz	r0, 80011b6 <__smakebuf_r+0x46>
 80011a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011a6:	059a      	lsls	r2, r3, #22
 80011a8:	d4ee      	bmi.n	8001188 <__smakebuf_r+0x18>
 80011aa:	f023 0303 	bic.w	r3, r3, #3
 80011ae:	f043 0302 	orr.w	r3, r3, #2
 80011b2:	81a3      	strh	r3, [r4, #12]
 80011b4:	e7e2      	b.n	800117c <__smakebuf_r+0xc>
 80011b6:	89a3      	ldrh	r3, [r4, #12]
 80011b8:	6020      	str	r0, [r4, #0]
 80011ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80011be:	81a3      	strh	r3, [r4, #12]
 80011c0:	9b01      	ldr	r3, [sp, #4]
 80011c2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80011c6:	b15b      	cbz	r3, 80011e0 <__smakebuf_r+0x70>
 80011c8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011cc:	4630      	mov	r0, r6
 80011ce:	f000 f81d 	bl	800120c <_isatty_r>
 80011d2:	b128      	cbz	r0, 80011e0 <__smakebuf_r+0x70>
 80011d4:	89a3      	ldrh	r3, [r4, #12]
 80011d6:	f023 0303 	bic.w	r3, r3, #3
 80011da:	f043 0301 	orr.w	r3, r3, #1
 80011de:	81a3      	strh	r3, [r4, #12]
 80011e0:	89a3      	ldrh	r3, [r4, #12]
 80011e2:	431d      	orrs	r5, r3
 80011e4:	81a5      	strh	r5, [r4, #12]
 80011e6:	e7cf      	b.n	8001188 <__smakebuf_r+0x18>

080011e8 <_fstat_r>:
 80011e8:	b538      	push	{r3, r4, r5, lr}
 80011ea:	4d07      	ldr	r5, [pc, #28]	@ (8001208 <_fstat_r+0x20>)
 80011ec:	2300      	movs	r3, #0
 80011ee:	4604      	mov	r4, r0
 80011f0:	4608      	mov	r0, r1
 80011f2:	4611      	mov	r1, r2
 80011f4:	602b      	str	r3, [r5, #0]
 80011f6:	f7ff f893 	bl	8000320 <_fstat>
 80011fa:	1c43      	adds	r3, r0, #1
 80011fc:	d102      	bne.n	8001204 <_fstat_r+0x1c>
 80011fe:	682b      	ldr	r3, [r5, #0]
 8001200:	b103      	cbz	r3, 8001204 <_fstat_r+0x1c>
 8001202:	6023      	str	r3, [r4, #0]
 8001204:	bd38      	pop	{r3, r4, r5, pc}
 8001206:	bf00      	nop
 8001208:	200001b8 	.word	0x200001b8

0800120c <_isatty_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	4d06      	ldr	r5, [pc, #24]	@ (8001228 <_isatty_r+0x1c>)
 8001210:	2300      	movs	r3, #0
 8001212:	4604      	mov	r4, r0
 8001214:	4608      	mov	r0, r1
 8001216:	602b      	str	r3, [r5, #0]
 8001218:	f7ff f888 	bl	800032c <_isatty>
 800121c:	1c43      	adds	r3, r0, #1
 800121e:	d102      	bne.n	8001226 <_isatty_r+0x1a>
 8001220:	682b      	ldr	r3, [r5, #0]
 8001222:	b103      	cbz	r3, 8001226 <_isatty_r+0x1a>
 8001224:	6023      	str	r3, [r4, #0]
 8001226:	bd38      	pop	{r3, r4, r5, pc}
 8001228:	200001b8 	.word	0x200001b8

0800122c <_init>:
 800122c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800122e:	bf00      	nop
 8001230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001232:	bc08      	pop	{r3}
 8001234:	469e      	mov	lr, r3
 8001236:	4770      	bx	lr

08001238 <_fini>:
 8001238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800123a:	bf00      	nop
 800123c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800123e:	bc08      	pop	{r3}
 8001240:	469e      	mov	lr, r3
 8001242:	4770      	bx	lr
